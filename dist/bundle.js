!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);var r=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.plus=function(e){return new t(this.x+e.x,this.y+e.y)},t.prototype.times=function(e){return new t(this.x*e,this.y*e)},t}(),o=function(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")};function i(t,e){for(var n,r,i,s,u=[],a=2;a<arguments.length;a++)u[a-2]=arguments[a];var l=document.createElement(t);try{for(var c=o(Object.keys(e)),f=c.next();!f.done;f=c.next()){var p=f.value;l.setAttribute(p,e[p])}}catch(t){n={error:t}}finally{try{f&&!f.done&&(r=c.return)&&r.call(c)}finally{if(n)throw n.error}}try{for(var y=o(u),h=y.next();!h.done;h=y.next()){var d=h.value;l.appendChild(d)}}catch(t){i={error:t}}finally{try{h&&!h.done&&(s=y.return)&&s.call(y)}finally{if(i)throw i.error}}return l}var s=function(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")},u=function(){function t(t,e,n){this.level=t,this.actors=e,this.status=n}return t.start=function(e){return new t(e,e.startActors,"playing")},Object.defineProperty(t.prototype,"player",{get:function(){return this.actors.find((function(t){return"player"===t.type}))},enumerable:!1,configurable:!0}),t.prototype.update=function(e,n){var r,o,i=this,u=this.actors.map((function(t){return t.update(e,i,n)})),a=new t(this.level,u,this.status);if("playing"!==a.status)return a;var l,c,f=a.player;if(this.level.touches(f.pos,f.size,"lava"))return new t(this.level,u,"lost");try{for(var p=s(u),y=p.next();!y.done;y=p.next()){var h=y.value;h!==f&&(c=f,(l=h).pos.x+l.size.x>c.pos.x&&l.pos.x<c.pos.x+c.size.x&&l.pos.y+l.size.y>c.pos.y&&l.pos.y<c.pos.y+c.size.y)&&(a=h.collide(a))}}catch(t){r={error:t}}finally{try{y&&!y.done&&(o=p.return)&&o.call(p)}finally{if(r)throw r.error}}return a},t}(),a=function(){function t(t,e,n){this.pos=t,this.basePos=e,this.wobble=n,this.size=new r(.6,.6)}return Object.defineProperty(t.prototype,"type",{get:function(){return"coin"},enumerable:!1,configurable:!0}),t.create=function(e){var n=e.plus(new r(.2,.1));return new t(n,n,Math.random()*Math.PI*2)},t.prototype.collide=function(t){var e=this,n=t.actors.filter((function(t){return t!==e})),r=t.status;return n.some((function(t){return"coin"===t.type}))||(r="won"),new u(t.level,n,r)},t.prototype.update=function(e){var n=this.wobble+e*f,o=Math.sin(n)*p;return new t(this.basePos.plus(new r(0,o)),this.basePos,n)},t}(),l=function(){function t(t,e,n){this.speed=e,this.pos=t,this.reset=n,this.size=new r(1,1)}return Object.defineProperty(t.prototype,"type",{get:function(){return"lava"},enumerable:!1,configurable:!0}),t.create=function(e,n){switch(n){case"=":return new t(e,new r(2,0));case"|":return new t(e,new r(0,2));case"v":return new t(e,new r(0,3),e)}},t.prototype.collide=function(t){return new u(t.level,t.actors,"lost")},t.prototype.update=function(e,n){var r=this.pos.plus(this.speed.times(e));return n.level.touches(r,this.size,"wall")?this.reset?new t(this.reset,this.speed,this.reset):new t(this.pos,this.speed.times(-1)):new t(r,this.speed,this.reset)},t}(),c={".":"empty","#":"wall","+":"lava","@":function(){function t(t,e){this.pos=t,this.speed=e,this.size=new r(.8,1.5)}return Object.defineProperty(t.prototype,"type",{get:function(){return"player"},enumerable:!1,configurable:!0}),t.create=function(e){return new t(e.plus(new r(0,-.5)),new r(0,0))},t.prototype.update=function(e,n,o){var i=0;o.ArrowLeft&&(i-=y),o.ArrowRight&&(i+=y);var s=this.pos,u=s.plus(new r(i*e,0));n.level.touches(u,this.size,"wall")||(s=u);var a=this.speed.y+e*h,l=s.plus(new r(0,a*e));return n.level.touches(l,this.size,"wall")?a=o.ArrowUp&&a>0?-d:0:s=l,new t(s,new r(i,a))},t}(),o:a,"=":l,v:l,"|":l},f=8,p=.07,y=7,h=30,d=17,v=function(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,o,i=n.call(t),s=[];try{for(;(void 0===e||e-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(t){o={error:t}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return s},w=function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(v(arguments[e]));return t},m=function(){function t(t){var e=this,n=t.trim().split("\n").map((function(t){return w(t)}));this.height=n.length,this.width=n[0].length,this.startActors=[],this.rows=n.map((function(t,n){return t.map((function(t,o){var i=c[t];return"string"==typeof i?i:(e.startActors.push(i.create(new r(o,n),t)),"empty")}))}))}return t.prototype.touches=function(t,e,n){for(var r=Math.floor(t.x),o=Math.ceil(t.x+e.x),i=Math.floor(t.y),s=Math.ceil(t.y+e.y),u=i;u<s;u++)for(var a=r;a<o;a++){if((a<0||a>=this.width||u<0||u>=this.height?"wall":this.rows[u][a])==n)return!0}return!1},t}();var b=function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function s(t){try{a(r.next(t))}catch(t){i(t)}}function u(t){try{a(r.throw(t))}catch(t){i(t)}}function a(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,u)}a((r=r.apply(t,e||[])).next())}))},g=function(t,e){var n,r,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(i){return function(u){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(o=s.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}};function x(t){var e=null;requestAnimationFrame((function n(r){if(null!==e){var o=Math.min(r-e,100)/1e3;if(!1===t(o))return}e=r,requestAnimationFrame(n)}))}function S(t,e){var n=new e(document.body,t),r=u.start(t),o=1,i="yes",s=function(t){var e=Object.create(null);function n(n){t.includes(n.key)&&(e[n.key]="keydown"===n.type,n.preventDefault())}return window.addEventListener("keydown",n),window.addEventListener("keyup",n),e.unregister=function(){window.removeEventListener("keydown",n),window.removeEventListener("keyup",n)},e}(["ArrowLeft","ArrowRight","ArrowUp"]);return new Promise((function(t){function e(t){"Escape"===t.key&&(t.preventDefault(),"no"===i?(i="yes",x(u)):i=(i="yes")?"pausing":"yes")}function u(u){return"pausing"===i?(i="no",!1):(r=r.update(u,s),n.syncState(r),"playing"===r.status||(o>0?(o-=u,!0):(n.clear(),window.removeEventListener("keydown",e),s.unregister(),t(r.status),!1)))}window.addEventListener("keydown",e),x(u)}))}var P=function(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,o,i=n.call(t),s=[];try{for(;(void 0===e||e-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(t){o={error:t}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return s},k=function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(P(arguments[e]));return t};!function(t,e){b(this,void 0,void 0,(function(){var n,r,o;return g(this,(function(i){switch(i.label){case 0:n=5,r=0,i.label=1;case 1:return r<t.length?[4,S(new m(t[r]),e)]:[3,4];case 2:"won"===(o=i.sent())&&r++,"lost"===o&&(console.log(--n+" жизней"),0===n&&(console.log("ты проиграл"),r=0,n=5)),i.label=3;case 3:return[3,1];case 4:return console.log("ты победил!"),[2]}}))}))}(["\n......................\n..#................#..\n..#................#..\n..#.........o.o....#..\n..#.@......#####...#..\n..#####............#..\n......#++++++++++++#..\n......##############..\n......................","\n.....................................................................................################.................................................v\n......................................................................................###.v.....v......................................................\n........................................................................................v..............................................................\n.......................................................................................................................................................\n#...............................................................................................................oo....................................o\n###..................................o........................................................................................o..o....................#\n##..............................o....#.....o......................................................=.....o.o.o.........................o....o.........##\n##..............................#....#.....#............................................................#####.........ooooooo.........##...##........##\n##..............................#++++++++++#........................................o..o..o.........o................########....##..................##\n##.............................#############................................o.......########.......##...............................................###\n##.............................................................oo.........#####.....................................................................###\n##@...............######......................................####.....................|......oooo.................................................####\n###............o........................=...................................................#..#...............=.................................######\n#################+++++++#####################################################################+++++#####################################################\n#######################################################################################################################################################\n"],function(){function t(t,e){this.dom=i("div",{class:"game"},function(t){return i.apply(void 0,k(["table",{class:"background",style:"width: "+20*t.width+"px"}],t.rows.map((function(t){return i.apply(void 0,k(["tr",{style:"height: 20px"}],t.map((function(t){return i("td",{class:t})}))))}))))}(e)),this.actorLayer=null,t.appendChild(this.dom)}return t.prototype.clear=function(){this.dom.remove()},t.prototype.syncState=function(t){var e,n;null===(e=this.actorLayer)||void 0===e||e.remove(),this.actorLayer=(n=t.actors,i.apply(void 0,k(["div",{}],n.map((function(t){var e=i("div",{class:"actor "+t.type});return e.style.width=20*t.size.x+"px",e.style.height=20*t.size.y+"px",e.style.left=20*t.pos.x+"px",e.style.top=20*t.pos.y+"px",e}))))),this.dom.appendChild(this.actorLayer),this.dom.className="game "+t.status,this.scrollPlayerIntoView(t)},t.prototype.scrollPlayerIntoView=function(t){var e=this.dom.clientWidth,n=this.dom.clientHeight,r=e/3,o=this.dom.scrollLeft,i=o+e,s=this.dom.scrollTop,u=s+n,a=t.player,l=a.pos.plus(a.size.times(.5)).times(20);l.x<o+r?this.dom.scrollLeft=l.x-r:l.x>i-r&&(this.dom.scrollLeft=l.x+r-e),l.y<s+r?this.dom.scrollTop=l.y-r:l.x>u-r&&(this.dom.scrollTop=l.y+r-n)},t}())}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,