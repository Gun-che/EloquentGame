!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);var r=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.plus=function(e){return new t(this.x+e.x,this.y+e.y)},t.prototype.times=function(e){return new t(this.x*e,this.y*e)},t}();var o=function(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")},i=function(){function t(t,e,n){this.level=t,this.actors=e,this.status=n}return t.start=function(e){return new t(e,e.startActors,"playing")},Object.defineProperty(t.prototype,"player",{get:function(){return this.actors.find((function(t){return"player"===t.type}))},enumerable:!1,configurable:!0}),t.prototype.update=function(e,n){var r,i,s=this,a=this.actors.map((function(t){return t.update(e,s,n)})),l=new t(this.level,a,this.status);if("playing"!==l.status)return l;var u,c,p=l.player;if(this.level.touches(p.pos,p.size,"lava"))return new t(this.level,a,"lost");try{for(var h=o(a),f=h.next();!f.done;f=h.next()){var y=f.value;y!==p&&(c=p,(u=y).pos.x+u.size.x>c.pos.x&&u.pos.x<c.pos.x+c.size.x&&u.pos.y+u.size.y>c.pos.y&&u.pos.y<c.pos.y+c.size.y)&&(l=y.collide(l))}}catch(t){r={error:t}}finally{try{f&&!f.done&&(i=h.return)&&i.call(h)}finally{if(r)throw r.error}}return l},t}(),s=function(){function t(t,e,n){this.pos=t,this.basePos=e,this.wobble=n,this.size=new r(.6,.6)}return Object.defineProperty(t.prototype,"type",{get:function(){return"coin"},enumerable:!1,configurable:!0}),t.create=function(e){var n=e.plus(new r(.2,.1));return new t(n,n,Math.random()*Math.PI*2)},t.prototype.collide=function(t){var e=this,n=t.actors.filter((function(t){return t!==e})),r=t.status;return n.some((function(t){return"coin"===t.type}))||(r="won"),new i(t.level,n,r)},t.prototype.update=function(e){var n=this.wobble+e*u,o=Math.sin(n)*c;return new t(this.basePos.plus(new r(0,o)),this.basePos,n)},t}(),a=function(){function t(t,e,n){this.speed=e,this.pos=t,this.reset=n,this.size=new r(1,1)}return Object.defineProperty(t.prototype,"type",{get:function(){return"lava"},enumerable:!1,configurable:!0}),t.create=function(e,n){switch(n){case"=":return new t(e,new r(2,0));case"|":return new t(e,new r(0,2));case"v":return new t(e,new r(0,3),e)}},t.prototype.collide=function(t){return new i(t.level,t.actors,"lost")},t.prototype.update=function(e,n){var r=this.pos.plus(this.speed.times(e));return n.level.touches(r,this.size,"wall")?this.reset?new t(this.reset,this.speed,this.reset):new t(this.pos,this.speed.times(-1)):new t(r,this.speed,this.reset)},t}(),l={".":"empty","#":"wall","+":"lava","@":function(){function t(t,e){this.pos=t,this.speed=e,this.size=new r(.8,1.5)}return Object.defineProperty(t.prototype,"type",{get:function(){return"player"},enumerable:!1,configurable:!0}),t.create=function(e){return new t(e.plus(new r(0,-.5)),new r(0,0))},t.prototype.update=function(e,n,o){var i=0;o.ArrowLeft&&(i-=p),o.ArrowRight&&(i+=p);var s=this.pos,a=s.plus(new r(i*e,0));n.level.touches(a,this.size,"wall")||(s=a);var l=this.speed.y+e*f,u=s.plus(new r(0,l*e));return n.level.touches(u,this.size,"wall")?l=o.ArrowUp&&l>0?-y:0:s=u,new t(s,new r(i,l))},t}(),o:s,"=":a,v:a,"|":a,M:function(){function t(t){this.pos=t,this.size=new r(1.2,2)}return Object.defineProperty(t.prototype,"type",{get:function(){return"monster"},enumerable:!1,configurable:!0}),t.create=function(e){return new t(e.plus(new r(0,-1)))},t.prototype.update=function(e,n){var o=(n.player.pos.x<this.pos.x?-1:1)*e*h,i=new r(this.pos.x+o,this.pos.y);return n.level.touches(i,this.size,"wall")?this:new t(i)},t.prototype.collide=function(t){var e=this,n=t.player;if(n.pos.y+n.size.y<this.pos.y+.5){var r=t.actors.filter((function(t){return t!=e}));return new i(t.level,r,t.status)}return new i(t.level,t.actors,"lost")},t}()},u=8,c=.07,p=7,h=4,f=30,y=17,w=function(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,o,i=n.call(t),s=[];try{for(;(void 0===e||e-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(t){o={error:t}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return s},v=function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(w(arguments[e]));return t},d=function(){function t(t){var e=this,n=t.trim().split("\n").map((function(t){return v(t)}));this.height=n.length,this.width=n[0].length,this.startActors=[],this.rows=n.map((function(t,n){return t.map((function(t,o){var i=l[t];return"string"==typeof i?i:(e.startActors.push(i.create(new r(o,n),t)),"empty")}))}))}return t.prototype.touches=function(t,e,n){for(var r=Math.floor(t.x),o=Math.ceil(t.x+e.x),i=Math.floor(t.y),s=Math.ceil(t.y+e.y),a=i;a<s;a++)for(var l=r;l<o;l++){if((l<0||l>=this.width||a<0||a>=this.height?"wall":this.rows[a][l])==n)return!0}return!1},t}();var b=function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function s(t){try{l(r.next(t))}catch(t){i(t)}}function a(t){try{l(r.throw(t))}catch(t){i(t)}}function l(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,a)}l((r=r.apply(t,e||[])).next())}))},m=function(t,e){var n,r,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(o=s.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}};function g(t){var e=null;requestAnimationFrame((function n(r){if(null!==e){var o=Math.min(r-e,100)/1e3;if(!1===t(o))return}e=r,requestAnimationFrame(n)}))}function x(t,e){var n=new e(document.body,t),r=i.start(t),o=1,s="yes",a=function(t){var e=Object.create(null);function n(n){t.includes(n.key)&&(e[n.key]="keydown"===n.type,n.preventDefault())}return window.addEventListener("keydown",n),window.addEventListener("keyup",n),e.unregister=function(){window.removeEventListener("keydown",n),window.removeEventListener("keyup",n)},e}(["ArrowLeft","ArrowRight","ArrowUp"]);return new Promise((function(t){function e(t){"Escape"===t.key&&(t.preventDefault(),"no"===s?(s="yes",g(i)):s=(s="yes")?"pausing":"yes")}function i(i){return"pausing"===s?(s="no",!1):(r=r.update(i,a),n.syncState(r),"playing"===r.status||(o>0?(o-=i,!0):(n.clear(),window.removeEventListener("keydown",e),a.unregister(),t(r.status),!1)))}window.addEventListener("keydown",e),g(i)}))}var S=function(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")};!function(t,e){b(this,void 0,void 0,(function(){var n,r,o;return m(this,(function(i){switch(i.label){case 0:n=5,r=0,i.label=1;case 1:return r<t.length?[4,x(new d(t[r]),e)]:[3,4];case 2:"won"===(o=i.sent())&&r++,"lost"===o&&(console.log(--n+" жизней"),0===n&&(console.log("ты проиграл"),r=0,n=5)),i.label=3;case 3:return[3,1];case 4:return console.log("ты победил!"),[2]}}))}))}(["\n............................................\n............................................\n............................................\n............................................\n..#......................................#..\n..#.....................#................#..\n..#.........o.o....#....#.........o.o....#..\n..#.@......#####...#....#........#####...#..\n..#####............#....#####............#..\n......#++++++++++++#........#..........M.#..\n=..=.=##############=..=..=.##############=.\n++++++++++++++++++++++++++++++++++++++++++++","\n.....................................................................................################.................................................v\n......................................................................................###.v.....v......................................................\n........................................................................................v..............................................................\n.......................................................................................................................................................\n#...............................................................................................................oo....................................o\n###..................................o........................................................................................o..o....................#\n##..............................o....#.....o......................................................=.....o.o.o.........................o....o.........##\n##..............................#....#.....#............................................................#####.........ooooooo.........##...##........##\n##..............................#++++++++++#........................................o..o..o.........o................########....##..................##\n##.............................#############................................o.......########.......##...............................................###\n##.............................................................oo.........#####.....................................................................###\n##@...............######......................................####.....................|......oooo.................................................####\n###............o........................=...................................................#..#...............=.................................######\n#################+++++++#####################################################################+++++#####################################################\n#######################################################################################################################################################\n"],function(){function t(t,e){this.canvas=document.createElement("canvas"),this.canvas.width=Math.min(600,20*e.width),this.canvas.height=Math.min(450,20*e.height),t.appendChild(this.canvas),this.cx=this.canvas.getContext("2d"),this.flipPlayer=!1,this.viewport={left:0,top:0,width:this.canvas.width/20,height:this.canvas.height/20},this.otherSprites=document.createElement("img"),this.otherSprites.src="sprites.png",this.playerSprites=document.createElement("img"),this.playerSprites.src="player.png"}return t.prototype.clear=function(){this.canvas.remove()},t.prototype.syncState=function(t){this.updateViewport(t),this.clearDisplay(t.status),this.drawBackground(t.level),this.drawActors(t.actors)},t.prototype.updateViewport=function(t){var e=this.viewport,n=e.width/3,r=t.player,o=r.pos.plus(r.size.times(.5));o.x<e.left+n?e.left=Math.max(o.x-n,0):o.x>e.left+e.width-n&&(e.left=Math.min(o.x+n-e.width,t.level.width-e.width)),o.y<e.top+n?e.top=Math.max(o.y-n,0):o.y>e.top+e.height-n&&(e.top=Math.min(o.y+n-e.height,t.level.height-e.height))},t.prototype.clearDisplay=function(t){switch(t){case"won":this.cx.fillStyle="rgb(68, 190, 255)";break;case"lost":this.cx.fillStyle="rgb(44, 130, 215)";break;default:this.cx.fillStyle="rgb(52, 166, 250)"}this.cx.fillRect(0,0,this.canvas.width,this.canvas.height)},t.prototype.drawBackground=function(t){for(var e=this.viewport,n=e.left,r=e.top,o=e.width,i=e.height,s=Math.floor(n),a=Math.ceil(n+o),l=Math.floor(r),u=Math.ceil(r+i),c=l;c<u;c++)for(var p=s;p<a;p++){var h=t.rows[c][p];if("empty"!==h){var f=20*(p-n),y=20*(c-r),w="lava"===h?20:0;this.cx.drawImage(this.otherSprites,w,0,20,20,f,y,20,20)}}},t.prototype.drawPlayer=function(t,e,n,r,o){r+=8,e-=4,0!==t.speed.x&&(this.flipPlayer=t.speed.x<0);var i=8;0!==t.speed.y?i=9:0!==t.speed.x&&(i=Math.floor(Date.now()/60)%8),this.cx.save(),this.flipPlayer&&this.flipHorizontally(this.cx,e+r/2);var s=i*r;this.cx.drawImage(this.playerSprites,s,0,r,o,e,n,r,o),this.cx.restore()},t.prototype.drawActors=function(t){var e,n;try{for(var r=S(t),o=r.next();!o.done;o=r.next()){var i=o.value,s=20*i.size.x,a=20*i.size.y,l=20*(i.pos.x-this.viewport.left),u=20*(i.pos.y-this.viewport.top);if("player"===i.type)this.drawPlayer(i,l,u,s,a);else{var c=20*("coin"===i.type?2:1);this.cx.drawImage(this.otherSprites,c,0,s,a,l,u,s,a)}}}catch(t){e={error:t}}finally{try{o&&!o.done&&(n=r.return)&&n.call(r)}finally{if(e)throw e.error}}},t.prototype.flipHorizontally=function(t,e){t.translate(e,0),t.scale(-1,1),t.translate(-e,0)},t}())}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,